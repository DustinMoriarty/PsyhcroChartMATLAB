function f = psychrometric(patm,varargin)%% Psychrometric Chart% Dustin Moriarty 02/18/2013%% PSYCHROMETRIC(PATM) generatres a psychrometric plot figure at the% pressure provided by PATM.% % PSYCHROMETRIC(PATM,big) generatres a psychrometric plot figure at the% pressure provided by PATM.  If big == true, then a large figure is% generated.  If big == false, then a small figure is generated%%       Arguments%       PATM     pressure in kPa    if nargin == 1        big = true;    elseif nargin == 2        big = varargin{1};      end    if big == false        f = figure('Position',[0 0 55 25]*14 );    else        f = figure('Position',[0 0 55 25]*22 );    end            t = 0:1:55; %temperature (C)    t = t';    pg = zeros(length(t),1);    for i = 1:length(t)        pg(i) = SaturationPressure(t(i) + 273.15)*1e-3;    end    rair = 0.287; % gas constant of air (kJ/kg.K)    wg = 622*pg./(patm-pg); % saturation specific humidity    axes('yaxislocation','right','XMinorTick','on','YMinorTick','on')    hold    plot([0,25],[5,30],'k-') %enthalpy axis    axis([0,55, 0,30])       fill([t',25,0],[wg',30,5],[1,1,1]*0.95)            %area(t,wg,'facecolor',[1,1,1])    plot(t,wg,'r-');            enthalpy(big)    relativehumidity(t,pg,big)    specificvol(big)    wetbulbtemp(big)            title(sprintf('Psychrometric Properties of Moist Air At %3.1f kPa', patm))    xlabel('Dry Bulb Temperature (^oC)')%     ylabel('Specific Humidity  (g_{w}/kg_{da})')        function relativehumidity(t,pg,big)        if big == true            step = 0.1;            fs = 10;        else            step = 0.2;            fs = 6;        end                for phi = 0.1:step:0.9, % phi = relative humidity 10% - 40%            w = 622*phi*pg./(patm-phi*pg);            plot(t,w)            text(t(30),w(30),sprintf('\\fontsize{%1.0f} %1.0f %%',[fs,phi*100]),'color','blue',...                'backgroundcolor','white','rotation',...                atan2(w(30)-w(29),t(30)-t(29))*180/pi,...                'VerticalAlignment','top');        end        phi = 0.1;        w = 622*phi*pg./(patm-phi*pg);        text(t(30),w(30),sprintf('\\fontsize{%1.0f} Relative Humidity',fs),'color','blue',...            'backgroundcolor','white','rotation',...            atan2(w(30)-w(29),t(30)-t(29))*180/pi,...            'HorizontalAlignment','center','VerticalAlignment','bottom');        end    function specificvol(big)        % specific volume and enthalpy/wet-bulb-temp        if big == true            step = 5;            fs = 10;        else            step = 10;            fs = 6;        end        t1 = 5:step:35;        t1 = t1';        pg1 = zeros(length(t1),1);        for i = 1:length(t1)            pg1(i) = SaturationPressure(t1(i) + 273.15)*1e-3;        end        wg1 = 622*pg1./(patm-pg1); % saturation specific humidity        % specific volume of dry air (cubic m/kg dry air) (green)        vol = rair.*(t1+273)./(patm-pg1); % specific vol at saturation        tv0 = patm*vol/rair-273; % air temperature at zero humidity        for i = 1:length(t1),            plot([t1(i),tv0(i)],[wg1(i),0],'g-')            text((t1(i) - tv0(i))/wg1(i)*(.8*wg1(i))+tv0(i),(.8*wg1(i)),...                sprintf('\\fontsize{%2.0f} %0.2f m^3/kg',[fs,vol(i)]),'color','green','backgroundcolor',...                'white','rotation',atan2(-wg1(i),tv0(i)-t1(i))*180/pi)        end            text((t1(2) - tv0(2))/wg1(2)*(.9*wg1(2))+tv0(2) + 1,(.9*wg1(2)),...                sprintf('\\fontsize{%2.0f} Specific Volume',fs),'color','green','backgroundcolor',...                'white','rotation',atan2(-wg1(2),tv0(2)-t1(2))*180/pi)                    end    function wetbulbtemp(big)        if big == true            step = 1;            fs = 10;        else            step = 2;            fs = 6;        end                t1 = 0:step:40;        t1 = t1';        pg1 = zeros(length(t1),1);        for j = 1:length(t1)            pg1(j) = SaturationPressure(t1(j) + 273.15)*1e-3;        end        wg1 = 622*pg1./(patm-pg1); % saturation specific humidity            t0 = t1 + 2.5*wg1; % temperature at zero humidity         for j = 1:(length(t1)),                        if  mod(t1(j),step*5) == 0                                plot([t1(j),t0(j)],[wg1(j),0],'r-')                if(t(j)>0 && t(j)<35)                text((t1(j) - t0(j))/wg1(j)*(wg1(j))+t0(j),(wg1(j)),...                    sprintf('\\fontsize{%2.0f} %1.0f ^oC',[fs,t1(j)]),'color','red','backgroundcolor',...                    'white','rotation',atan2(-wg1(j),t0(j)-t1(j))*180/pi,...                    'HorizontalAlignment','right','VerticalAlignment','Top')                end            else                t2 = t1(j) + 2.5*.2;                wg2 = wg1(j) - .2;                plot([t2,t1(j)],[wg2,wg1(j)],'r-')            end                   end        textloc = 16;        text((t1(textloc) - t0(textloc))/wg1(textloc)*(wg1(textloc))+t0(textloc),...            (wg1(textloc)),sprintf('\\fontsize{%2.0f} Wet Bulb Temperature',fs),...            'color','red','backgroundcolor','white','rotation',...            atan2(-wg1(textloc),t0(textloc)-t1(textloc))*180/pi,...            'HorizontalAlignment','Center','VerticalAlignment','Bottom')    end    function enthalpy(big)        %% enthalpy axis and enthalpy lines (black)        if big == true            step = 1;            fs = 10;        else            step = 2;            fs = 6;        end        rair = 0.287; % gas constant of air (kJ/kg.K)        for h = 10:step:100, % enthalpy (kJ/kg-dry-air)            t0 = h; % temperature at zero humidity            t1 = (h - 12.5)/3.5; % temperature on enthalpy axis            w1 = t1 + 5; % specific humidity on enthalpy axis             if h>20 && h<=95 && mod(h,step*10) == 0                text(t1,w1,...                sprintf('\\fontsize{%2.0f} %1.0f kJ/kg',[fs,h]),'color','black','backgroundcolor',...                'white','rotation',atan2(-w1,-t1+t0)*180/pi,...                'HorizontalAlignment','right');            end            if  mod(h,step*10) == 0                plot([t0,t1],[0,w1],'k-');            else                t2 = t1 + 2.5*.2;                w2 = w1 - .2;                plot([t2,t1],[w2,w1],'k-');            end            if h ==20                text(t1,w1,...                sprintf('\\fontsize{%2.0f} Specific Enthalpy',fs),'color',...                'black','backgroundcolor','white','rotation',...                atan2(-1,2.5)*180/pi,'HorizontalAlignment',...                'left','VerticalAlignment','Bottom');            end        end    end    function p = SaturationPressure(T)        %% Saturation Pressure of Water Per ASHRAE 2009 F1.2        % Author: Dustin Moriary        %        % Arguments        % T     Temperature (K)        if T>=173.15 && T < 273.15            C1 = -5.6745359e3;            C2 = 6.3925247;            C3 = -9.6778430e-3;            C4 = 6.2215701e-7;            C5 = 2.0747825e-9;            C6 = -9.484024e-13;            C7 = 4.1635019;            p = exp(C1/T + C2 + C3*T + C4*T^2 + C5*T^3 + C6*T^4 + C7 * log(T));        elseif T>= 273.15 && T< 473.15            C8 = -5.8002206e3;            C9 = 1.3914993;            C10 = -4.8640239e-2;            C11 = 4.1764768e-5;            C12 = -1.4452093e-8;            C13 = 6.5459673;            p = exp(C8/T+C9+C10*T+C11*T^2+C12*T^3+C13*log(T));        else            p = NaN;            fprintf('Temperature out of Range')        end    endend